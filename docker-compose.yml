# [Ultimate Smart Home Media Server with Docker and Ubuntu][1]
#
# [1]: https://www.smarthomebeginner.com/docker-home-media-server-2018-basic/
version: "3.6"
volumes:
    media:
        driver: local
        driver_opts:
            type: nfs
            o: addr=192.168.0.103,rw,nordirplus
            device: ":/mnt/array1/media"
services:
    portainer:
        image: portainer/portainer-ce
        container_name: portainer
        restart: always
        command: -H unix:///var/run/docker.sock
        ports:
            - "9000:9000"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./portainer/data:/data
            - ./shared:/shared
        environment:
            - TZ=${TZ}
    organizr:
        container_name: organizr
        restart: always
        image: organizr/organizr:latest
        volumes:
            - ./organizr:/config
            - ./shared:/shared
        ports:
            - "8080:80"
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
            - fmp="false"
    watchtower:
        container_name: watchtower
        restart: always
        image: containrrr/watchtower:latest
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        command: --schedule "0 0 4 * * *" --cleanup
    transmission:
        container_name: transmission-vpn
        image: haugene/transmission-openvpn:latest
        cap_add:
            - NET_ADMIN
        devices:
            - "/dev/net/tun"
        restart: always
        ports:
            - "9091:9091"
        dns:
            - 1.1.1.1
            - 1.0.0.1
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - ./transmission-vpn/config:/config
            - ./transmission-vpn/data:/data
            - ./shared:/shared
            - media:/media
        logging:
            driver: "json-file"
            options:
                max-size: "500k"
                max-file: "10"
        environment:
            - OPENVPN_PROVIDER=PIA
            - OPENVPN_USERNAME=p7356348
            - OPENVPN_PASSWORD=${PIA_PASSWORD}
            - OPENVPN_OPTS=--inactive 3600 --ping 10 --ping-exit 60 --mute-replay-warnings --mssfix 1460
            - PIA_OPENVPN_CONFIG_BUNDLE=openvpn
            - OPENVPN_CONFIG=ca_toronto
            - LOCAL_NETWORK=192.168.0.0/24
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
            - TRANSMISSION_DOWNLOAD_DIR=/media/torrents/completed
            - TRANSMISSION_INCOMPLETE_DIR=/media/torrents/incomplete
            - TRANSMISSION_WATCH_DIR=/media/torrents/watch
            - TRANSMISSION_RPC_AUTHENTICATION_REQUIRED=false
            - TRANSMISSION_RPC_WHITELIST_ENABLED=false
            - TRANSMISSION_RPC_WHITELIST="127.0.0.1,192.168.0.*"
            - TRANSMISSION_UMASK=002
            - TRANSMISSION_WEB_UI=combustion
    radarr:
        image: linuxserver/radarr
        container_name: radarr
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - ./radarr:/config
            - ./shared:/shared
            - media:/media
        ports:
            - "7878:7878"
        restart: always
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
    sonarr:
        image: linuxserver/sonarr
        container_name: sonarr
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - ./sonarr:/config
            - ./shared:/shared
            - media:/media
        ports:
            - "8989:8989"
        restart: always
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
    bazarr:
        image: linuxserver/bazarr
        container_name: bazarr
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - ./bazarr:/config
            - ./shared:/shared
            - media:/media
        ports:
            - "6767:6767"
        restart: always
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
    prowlarr:
        image: lscr.io/linuxserver/prowlarr:develop
        container_name: prowlarr
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
        volumes:
            - ./prowlarr:/config
        ports:
            - 9696:9696
        restart: unless-stopped
    ombi:
        image: linuxserver/ombi
        container_name: ombi
        volumes:
            - ./ombi:/config
            - ./shared:/shared
        ports:
            - "3579:3579"
        restart: always
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
    pihole:
        image: pihole/pihole:latest
        container_name: pihole
        hostname: amelia
        ports:
            - "53:53/tcp"
            - "53:53/udp"
            - "8081:80/tcp"
            - "44300:443/tcp"
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
            - WEBPASSWORD=benflix
            - ServerIP=192.168.0.159
            - DNS1=1.1.1.1
            - DNS2=1.0.0.1
        # Must add --dns arg, otherwise pi-hole fails to start with
        # "DNS resolution is currently unavailable" message in the logs.
        # See https://github.com/pi-hole/docker-pi-hole/issues/342
        dns:
            - 127.0.0.1
            - 1.1.1.1
        volumes:
            - ./pihole/pihole:/etc/pihole
            - ./pihole/dnsmasq.d:/etc/pihole/dnsmasq.d
        cap_add:
            - NET_ADMIN
        restart: unless-stopped
    swag:
        image: ghcr.io/linuxserver/swag
        container_name: swag
        cap_add:
            - NET_ADMIN
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
            - URL=bshelley.duckdns.org
            - SUBDOMAINS=wildcard
            - VALIDATION=duckdns
            - FILE__DUCKDNSTOKEN=/run/secrets/duckdns_token
        volumes:
            - ./swag:/config
        ports:
            - 443:443
            - 80:80
        secrets:
            - duckdns_token
        restart: unless-stopped
    duckdns:
        image: ghcr.io/linuxserver/duckdns
        container_name: duckdns
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
            - SUBDOMAINS=bshelley,bensflix,benshelley
            - FILE__TOKEN=/run/secrets/duckdns_token
        secrets:
            - duckdns_token
        volumes:
            - ./duckdns:/config
        restart: unless-stopped

secrets:
    duckdns_token:
        file: ${HOME}/duckdns_token

